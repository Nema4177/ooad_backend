package com.emart.controller;

import com.emart.model.CartItem;
import com.emart.model.Product;
import com.emart.accessData.ProductFactory;
import com.emart.model.User;
import com.emart.service.EmartService;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
public class EmartController {

    //	@Autowired // This means to get the bean called userRepository Which is auto-generated by Spring, we will use it to handle the data
//	private UserRepository userRepository;
//	
    @Autowired
    private EmartService emartService;

    @PostMapping(path = "/register")
    public ResponseEntity<JSONObject> registerUser(@RequestBody User user) {
        JSONObject response = emartService.register(user);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/login")
    public ResponseEntity<JSONObject> loginuser(@RequestBody JSONObject loginDetails) {

        String username = (String) loginDetails.get("username");
        String password = (String) loginDetails.get("password");
        JSONObject response = emartService.login(username, password);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @GetMapping(path = "/getCategories")
    public ResponseEntity<JSONObject> getCategories(@RequestParam String username) {

        JSONObject response = emartService.getCategories();
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @GetMapping(path = "/getProducts")
    public ResponseEntity<JSONObject> getProducts(@RequestParam String username, @RequestParam String category) {

        JSONObject response = emartService.getProductList(category, username);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/addProduct")
    public ResponseEntity<JSONObject> addProduct(@RequestParam String username, @RequestBody JSONObject jsonObject) {

        String category = (String) jsonObject.get("category");

        Product product = new ProductFactory().getProduct(category);
        product.setName((String) jsonObject.get("name"));
        product.setCategory(category);
        product.setPrice((double) jsonObject.get("price"));
        product.setQuantity((int) jsonObject.get("quantity"));
        product.setRating((double) jsonObject.get("rating"));
        JSONObject response = emartService.addProduct(product);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/removeProduct")
    public ResponseEntity<JSONObject> removeProduct(@RequestParam String username, @RequestBody JSONObject jsonObject) {

        long productId = Long.parseLong((String) jsonObject.get("productId"));
        int quantity = (int) jsonObject.get("quantity");

        JSONObject response = emartService.removeProduct(productId, quantity);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/changePrice")
    public ResponseEntity<JSONObject> changePrice(@RequestParam String username, @RequestBody JSONObject jsonObject) {

        long productId = Long.parseLong((String) jsonObject.get("productId"));
        double price = (double) jsonObject.get("price");

        JSONObject response = emartService.changePrice(productId, price);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/changeQuantity")
    public ResponseEntity<JSONObject> changeQuantity(@RequestParam String username, @RequestBody JSONObject jsonObject) {

        long productId = Long.parseLong((String) jsonObject.get("productId"));
        int quantity = (int) jsonObject.get("quantity");

        JSONObject response = emartService.changeQuantity(productId, quantity);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @GetMapping(path = "/getCart")
    public ResponseEntity<JSONObject> getCartItems(@RequestParam String username, @RequestParam Long userId) {
        JSONObject response = emartService.getCartItems(userId);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/addToCart")
    public ResponseEntity<JSONObject> addToCart(@RequestParam String username, @RequestBody CartItem cartItem) {

        JSONObject response = emartService.addToCart(cartItem);
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }

    @PostMapping(path = "/removeFromCart")
    public ResponseEntity<JSONObject> removeFromCart(@RequestParam String username, @RequestBody CartItem cartItem) {

        JSONObject response = emartService.removeFromCart(cartItem.getUserId(), cartItem.getProductId());
        return new ResponseEntity<JSONObject>(response, HttpStatus.OK);
    }
}
